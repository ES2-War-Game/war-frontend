import { useState } from "react";

export interface TerritorySVG {
  nome: string;
  width: string;
  height: string;
  top?: string;
  bottom?: string;
  left?: string;
  rigth?: string;
  x: string;
  y: string;
  corClara: string;
  corEscura: string;
  d1: string;
  d2: string;
}

export default function Territory(territorio: TerritorySVG) {
  const [pais, setPais] = useState(false);
  

  return (
    <div>
      <svg
        width={territorio.width}
        height={territorio.height}
        style={{
          position: "absolute",
          bottom: `${territorio.bottom}`,
          top: `${territorio.top}`,
          right: `${territorio.rigth}`,
          left: `${territorio.left}`,
        }}
      >
        <g style={{ cursor: "pointer" }} onClick={() => setPais(!pais)}>
          <path
            d={territorio.d1}
            fill={pais ? `${territorio.corClara} ` : `${territorio.corEscura}`}
          />
          {territorio.d2 ? (
            <path
              d={territorio.d2}
              stroke="black"
              stroke-opacity="0.585271"
              stroke-width="2"
              stroke-miterlimit="4.32165"
              fill={pais ? `${territorio.corClara}` : `${territorio.corEscura}`}
            />
          ) : null}
        </g>
        {territorio.nome == "BORNEO" ? (
          <g filter="url(#filter1_f_0_1)">
            <path
              d="M49.932 82.8873C49.732 85.2887 50.3321 84.8884 49.5319 87.6901C49.732 87.8902 46.9313 89.291 46.5312 87.6901C46.1311 86.0891 46.7313 85.2887 46.5312 83.2875C46.3312 81.2863 45.3309 82.0868 44.5307 79.8855C43.7305 77.6842 44.7308 78.8849 45.3309 76.8837C45.9311 74.8825 44.9308 74.8825 44.3307 73.4817C43.7305 72.0809 44.1306 71.6806 44.1306 69.6794C44.1306 67.6783 44.5307 68.4787 45.1309 67.0779C45.731 65.6771 45.1309 62.6753 45.531 61.6747C45.9311 60.6741 47.9316 57.8725 47.9316 56.8719V56.8718C47.9316 55.8712 47.9316 53.8701 47.5315 51.4687C47.1314 49.0672 49.3319 48.0667 50.3321 47.4663C51.3324 46.8659 52.7327 45.8653 54.3331 45.0649C55.9335 44.2644 62.7351 44.6646 64.1355 44.0643C65.5358 43.4639 66.9361 41.2626 67.5363 40.4622C68.1364 39.6617 70.1369 40.0619 71.3372 40.4622C72.5375 40.8624 72.9376 41.6629 73.1376 42.6635C73.3377 43.664 72.5375 44.2644 71.3372 45.0649C70.1369 45.8653 69.1367 49.4675 68.3365 50.268C67.5363 51.0684 64.9357 52.4693 62.335 52.6694C59.7344 52.8695 60.3346 52.2691 57.5339 52.2691C54.7332 52.2691 56.3336 53.4698 56.1335 54.6706C55.9335 55.8713 56.9337 55.8713 58.3341 55.6711C59.7344 55.471 61.7349 55.8713 64.3355 56.2715C66.9361 56.6717 65.3358 57.4722 63.9354 60.0738C62.5351 62.6753 60.3345 61.2745 58.134 61.4746C55.9335 61.6747 56.7337 65.0767 56.9337 67.8784C57.1338 70.68 58.3341 68.6788 59.7344 68.4787C61.1347 68.2786 61.3348 70.0797 61.5348 75.2828C61.7349 80.4858 62.9352 78.2845 64.9357 80.4858C66.9361 82.6871 63.5353 84.4882 61.7349 86.2893C59.9345 88.0903 59.5344 86.0891 57.3338 84.2881C55.1333 82.487 55.7334 81.2863 53.933 78.2845C52.1326 75.2828 52.7327 77.8843 51.7325 79.4852C50.7322 81.0862 50.1321 80.4858 49.932 82.8873Z"
              fill={pais ? territorio.corClara : territorio.corEscura}
            />
            <path
              d="M49.932 82.8873C49.732 85.2887 50.3321 84.8884 49.5319 87.6901C49.732 87.8902 46.9313 89.291 46.5312 87.6901C46.1311 86.0891 46.7313 85.2887 46.5312 83.2875C46.3312 81.2863 45.3309 82.0868 44.5307 79.8855C43.7305 77.6842 44.7308 78.8849 45.3309 76.8837C45.9311 74.8825 44.9308 74.8825 44.3307 73.4817C43.7305 72.0809 44.1306 71.6806 44.1306 69.6794C44.1306 67.6783 44.5307 68.4787 45.1309 67.0779C45.731 65.6771 45.1309 62.6753 45.531 61.6747C45.9311 60.6741 47.9316 57.8725 47.9316 56.8719V56.8718C47.9316 55.8712 47.9316 53.8701 47.5315 51.4687C47.1314 49.0672 49.3319 48.0667 50.3321 47.4663C51.3324 46.8659 52.7327 45.8653 54.3331 45.0649C55.9335 44.2644 62.7351 44.6646 64.1355 44.0643C65.5358 43.4639 66.9361 41.2626 67.5363 40.4622C68.1364 39.6617 70.1369 40.0619 71.3372 40.4622C72.5375 40.8624 72.9376 41.6629 73.1376 42.6635C73.3377 43.664 72.5375 44.2644 71.3372 45.0649C70.1369 45.8653 69.1367 49.4675 68.3365 50.268C67.5363 51.0684 64.9357 52.4693 62.335 52.6694C59.7344 52.8695 60.3346 52.2691 57.5339 52.2691C54.7332 52.2691 56.3336 53.4698 56.1335 54.6706C55.9335 55.8713 56.9337 55.8713 58.3341 55.6711C59.7344 55.471 61.7349 55.8713 64.3355 56.2715C66.9361 56.6717 65.3358 57.4722 63.9354 60.0738C62.5351 62.6753 60.3345 61.2745 58.134 61.4746C55.9335 61.6747 56.7337 65.0767 56.9337 67.8784C57.1338 70.68 58.3341 68.6788 59.7344 68.4787C61.1347 68.2786 61.3348 70.0797 61.5348 75.2828C61.7349 80.4858 62.9352 78.2845 64.9357 80.4858C66.9361 82.6871 63.5353 84.4882 61.7349 86.2893C59.9345 88.0903 59.5344 86.0891 57.3338 84.2881C55.1333 82.487 55.7334 81.2863 53.933 78.2845C52.1326 75.2828 52.7327 77.8843 51.7325 79.4852C50.7322 81.0862 50.1321 80.4858 49.932 82.8873Z"
              stroke="black"
              strokeOpacity="0.585271"
              strokeWidth="1.2"
              strokeMiterlimit="4.32165"
              fill={pais ? territorio.corClara : territorio.corEscura}
            />
          </g>
        ) : null}
        {territorio.nome != "MADAGASCAR" ? (
          <text
            x={territorio.x}
            y={territorio.y}
            textAnchor="middle"
            dominantBaseline="central"
            fontSize="12"
            fontFamily="TrajanPro, Arial, sans-serif"
            fontWeight="bold"
            fill="white"
            style={{
              pointerEvents: "none",
              userSelect: "none",
              paintOrder: "stroke", // desenha o contorno primeiro
              stroke: "black", // cor do contorno
              strokeWidth: "2px", // espessura do contorno
              filter: "drop-shadow(1px 1px 2px rgba(0,0,0,0.6))", // sombra leve
            }}
          >
            {territorio.nome}
          </text>
        ) : null}
      </svg>
      
    </div>
  );
}
